/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package mic.crm.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import mic.crm.common.user.RoleENT;
import mic.crm.common.user.UserENT;
import mic.crm.common.user.UserLST;
import mic.crm.hibernate.SellDAOManager;
import mic.crm.hibernate.user.UserDAOInterface;
import mic.crm.tools.AMSErrorHandler;
import mic.crm.tools.AMSException;
import mic.crm.tools.NVL;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;



/** 
 * MyEclipse Struts
 * Creation date: 09-21-2010
 * 
 * XDoclet definition:
 * @struts.action parameter="reqCode" validate="true"
 * @struts.action-forward name="list" path="/jsp/farsi/news/newsList.jsp"
 */
public class UserAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ActionForward af = null;
		String reqCode=request.getParameter("reqCode");
		String success = "";
		String error = "";
		if("confirmUser".equalsIgnoreCase(reqCode)||"saveEdit".equalsIgnoreCase(reqCode)){
			UserENT userENT = new UserENT();
			userENT = getUserENT(request);
			try {
				userENT.setPassword(null);
				userENT = getDAO().saveUserENT(userENT);
				success = "عملیات ویرایش با موفقیت انجام گردید";
			} catch (AMSException e) {
				error="خطا در ویرایش";
				e.printStackTrace();
			}
			request.setAttribute("userENT", userENT);
			af = mapping.findForward("edit");
		}
		if("delete".equalsIgnoreCase(reqCode)){
			try {
				getDAO().deleteUser(request.getParameter("id"));
				success = "عملیات حذف با موفقیت انجام گردید";
			} catch (AMSException e) {
				error = AMSErrorHandler.handle(request, this, e, "", "");
				e.printStackTrace();
			}
			reqCode = "list";
		}
		if("list".equalsIgnoreCase(reqCode)||"salemng".equalsIgnoreCase(reqCode)){
			UserLST lst = new UserLST();
			if(request.getParameter("keyword")!=null)
				lst.setKeyword(NVL.getString(request.getParameter("keyword")));
			if(request.getParameter("page")!=null)
				lst.setCurrentPage(NVL.getInt(request.getParameter("page")));
			try {
				lst = getDAO().getUserLST(lst);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("userLST", lst);
			af = mapping.findForward("list");
		}else if("userList4Order".equalsIgnoreCase(reqCode)){
			UserLST lst = new UserLST();
			if(request.getParameter("keyword")!=null)
				lst.setKeyword(NVL.getString(request.getParameter("keyword")));
			if(request.getParameter("page")!=null)
				lst.setCurrentPage(NVL.getInt(request.getParameter("page")));
			try {
				lst = getDAO().getUserLST(lst);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("userLST", lst);
			af = mapping.findForward("ajaxUserList");
		}else if("getRoles".equalsIgnoreCase(reqCode)||"getRoles4Sale".equalsIgnoreCase(reqCode)){
			ArrayList<RoleENT> ents = new ArrayList<RoleENT>();
			try {
				ents = getDAO().getRolesList();
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			UserENT userENT = new UserENT();
			String username = request.getParameter("id");
			try {
				userENT = getDAO().getUserENT(username);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("roles", ents);
			request.setAttribute("userENT", userENT);
			af = mapping.findForward("userRoles");
		}else if("saveRoles".equalsIgnoreCase(reqCode)){
			String[] roles = request.getParameterValues("ids");
			String username = request.getParameter("username");
			try {
				getDAO().submitRoles(roles, username);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}else if("goToEdit".equalsIgnoreCase(reqCode)||"edit".equalsIgnoreCase(reqCode)||"getOperator".equalsIgnoreCase(reqCode)){
			UserENT userENT = new UserENT();
			String username = request.getParameter("id");
			try {
				userENT = getDAO().getUserENT(username);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("userENT", userENT);
			if("getOperator".equalsIgnoreCase(reqCode))
				af = mapping.findForward("operator");
			else
				af = mapping.findForward("edit");
		} 
		request.setAttribute("error", error);
		request.setAttribute("success", success);
			return af;
	}
	public UserENT getUserENT(HttpServletRequest request){
		UserENT userENT = new UserENT();
		userENT.setUserName(request.getParameter("userName"));
		return userENT;
	}
	private static UserDAOInterface getDAO() {
		return SellDAOManager.getUserDAOInterface();
	}
}